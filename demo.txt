#pick up boxes
'''
health_box_img = pygame.image.load('img/icins/hp_box.png').convert_alpha()
mana_box_img = pygame.image.load('img/icins/mp_box.png').convert_alpha()
ammo_img = pygame.image.load('img/icins/ammo_box.png').convert_alpha()

item_boxer = {
    'Health' : health_box_img,
    'Mana'   : mana_box_img,
    'Ammo'   : ammo_box_img

}
'''
#define colours
WHITE = (255, 255, 255)
BG = (144, 201, 120)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLACK = (0, 0, 0)

#font = pygame.font.SysFont('Futura', 30)

def draw_text(text, font, text_col, x, y):
    img =  font.render(text, True, text_col)
    screen.blit(img, (x, y))

def draw_bg():
    screen.fill(BG)
    pygame.draw.line(screen, RED, (0,300), (SCREEN_WIDTH), 300)


#create sprite groups
#item_box_group =  pygame.sprite.Group()

#item_box = ItemBox('Health', 100, 300)
#item_box_group.add(item_box)
#item_box = ItemBox('Mana', 100, 300)
#item_box_group.add(item_box)
#item_box = ItemBox('Ammo', 100, 300)
#item_box_group.add(item_box)

draw_bg()
#show player health
helth_bar.draw(player_health)
draw_text('AMMO', font, WHITE, 10, 35)
for x in range(player.ammo):
    screen.blit(bullet_img, (90 + (x * 10), 40))
draw_text('MANA', font, WHITE, 10, 60)
for x in range(player.mana):
    screen.blit(bullet_img, (135 + (x * 15), 60))

helth_bar = HealthBar(10, 10, player.health)

class ItemBox(pygame.sprite.Sprite):
    def __init__(self, item_type, x, y):
        pygame.sprite.Sprite._init_(self)
        self.item_type = item_type
        self.image = item_boxes[self.item_type]
        self.rect = self.image.get_rect()
        self.rect.midtop = (x + TILE_SIZE // 2, y + (TILE_SIZE - self.image.get_height()))

    def update(selfself):
        #check if the player has picked up the box
        if pygame.sprite.collide_rect(self,player):
            #check what kind of box it was
            if self.item_type == 'Health':
                player.health += 25
                if player.health > player.max_health:
                    player.health = player.max_health
            elif self.item_type == 'Mana':
                player.mana += 25
            elif self.item_type == 'Ammo':
                player.ammo += 50
            #delete the item box
            self.kill()

class HealthBar():
    def __init__(self, health, max_health,  x, y):
        self.x = x
        self.y = y
        self.health = health
        self.max.health = max_health

    def draw(self, health):
        #update with new health
        self.health = health
        #calculate health ratio
        ratio = self.health / self.max_health
        pygame.draw.rect(screen, BLACK, (self.x - 2, self.y - 2, 154, 24))
        pygame.draw.rect(screen, RED, (self.x, self.y, 150, 20))
        pygame.draw.rect(screen, GREEN, (self.x, self.y, 150 * ratio, 20))